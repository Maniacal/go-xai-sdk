// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.12
// source: xai/api/v1/embed.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmbedEncodingFormat int32

const (
	// Invalid format.
	EmbedEncodingFormat_FORMAT_INVALID EmbedEncodingFormat = 0
	// Returns the embeddings as an array of floats.
	EmbedEncodingFormat_FORMAT_FLOAT EmbedEncodingFormat = 1
	// Returns the embeddings as a base64-encoded string.
	EmbedEncodingFormat_FORMAT_BASE64 EmbedEncodingFormat = 2
)

// Enum value maps for EmbedEncodingFormat.
var (
	EmbedEncodingFormat_name = map[int32]string{
		0: "FORMAT_INVALID",
		1: "FORMAT_FLOAT",
		2: "FORMAT_BASE64",
	}
	EmbedEncodingFormat_value = map[string]int32{
		"FORMAT_INVALID": 0,
		"FORMAT_FLOAT":   1,
		"FORMAT_BASE64":  2,
	}
)

func (x EmbedEncodingFormat) Enum() *EmbedEncodingFormat {
	p := new(EmbedEncodingFormat)
	*p = x
	return p
}

func (x EmbedEncodingFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmbedEncodingFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_xai_api_v1_embed_proto_enumTypes[0].Descriptor()
}

func (EmbedEncodingFormat) Type() protoreflect.EnumType {
	return &file_xai_api_v1_embed_proto_enumTypes[0]
}

func (x EmbedEncodingFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmbedEncodingFormat.Descriptor instead.
func (EmbedEncodingFormat) EnumDescriptor() ([]byte, []int) {
	return file_xai_api_v1_embed_proto_rawDescGZIP(), []int{0}
}

// Request message for generating embeddings.
type EmbedRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The entities to embed. Note that not every model supports images and text.
	// Some models are text-only and some are image-only. You can at most embed
	// 128 inputs in a single request.
	Input []*EmbedInput `protobuf:"bytes,1,rep,name=input,proto3" json:"input,omitempty"`
	// Name or alias of the embedding model to use.
	Model string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	// Format of the returned embeddings.
	EncodingFormat EmbedEncodingFormat `protobuf:"varint,3,opt,name=encoding_format,json=encodingFormat,proto3,enum=xai_api.EmbedEncodingFormat" json:"encoding_format,omitempty"`
	// An opaque string supplied by the API client (customer) to identify a user.
	// The string will be stored in the logs and can be used in customer service
	// requests to identify certain requests.
	User          string `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmbedRequest) Reset() {
	*x = EmbedRequest{}
	mi := &file_xai_api_v1_embed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedRequest) ProtoMessage() {}

func (x *EmbedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xai_api_v1_embed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedRequest.ProtoReflect.Descriptor instead.
func (*EmbedRequest) Descriptor() ([]byte, []int) {
	return file_xai_api_v1_embed_proto_rawDescGZIP(), []int{0}
}

func (x *EmbedRequest) GetInput() []*EmbedInput {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *EmbedRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *EmbedRequest) GetEncodingFormat() EmbedEncodingFormat {
	if x != nil {
		return x.EncodingFormat
	}
	return EmbedEncodingFormat_FORMAT_INVALID
}

func (x *EmbedRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

// Input content to be embedded.
type EmbedInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Input:
	//
	//	*EmbedInput_String_
	//	*EmbedInput_ImageUrl
	Input         isEmbedInput_Input `protobuf_oneof:"input"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmbedInput) Reset() {
	*x = EmbedInput{}
	mi := &file_xai_api_v1_embed_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedInput) ProtoMessage() {}

func (x *EmbedInput) ProtoReflect() protoreflect.Message {
	mi := &file_xai_api_v1_embed_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedInput.ProtoReflect.Descriptor instead.
func (*EmbedInput) Descriptor() ([]byte, []int) {
	return file_xai_api_v1_embed_proto_rawDescGZIP(), []int{1}
}

func (x *EmbedInput) GetInput() isEmbedInput_Input {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *EmbedInput) GetString_() string {
	if x != nil {
		if x, ok := x.Input.(*EmbedInput_String_); ok {
			return x.String_
		}
	}
	return ""
}

func (x *EmbedInput) GetImageUrl() *ImageUrlContent {
	if x != nil {
		if x, ok := x.Input.(*EmbedInput_ImageUrl); ok {
			return x.ImageUrl
		}
	}
	return nil
}

type isEmbedInput_Input interface {
	isEmbedInput_Input()
}

type EmbedInput_String_ struct {
	// A string to be embedded.
	String_ string `protobuf:"bytes,1,opt,name=string,proto3,oneof"`
}

type EmbedInput_ImageUrl struct {
	// An image to be embedded.
	ImageUrl *ImageUrlContent `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3,oneof"`
}

func (*EmbedInput_String_) isEmbedInput_Input() {}

func (*EmbedInput_ImageUrl) isEmbedInput_Input() {}

// Response object for the `Embed` RPC.
type EmbedResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An identifier of this request. The same ID will be used in your billing
	// records.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The embeddings generated from the inputs.
	Embeddings []*Embedding `protobuf:"bytes,2,rep,name=embeddings,proto3" json:"embeddings,omitempty"`
	// The usage associated with this request.
	Usage *EmbeddingUsage `protobuf:"bytes,3,opt,name=usage,proto3" json:"usage,omitempty"`
	// The name of the model used for the request. This model name contains
	// the actual model name used rather than any aliases.
	// This means it can be `embed-0205` even when the request was specifying
	// `embed-latest`.
	Model string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	// This fingerprint represents the backend configuration that the model runs
	// with.
	SystemFingerprint string `protobuf:"bytes,5,opt,name=system_fingerprint,json=systemFingerprint,proto3" json:"system_fingerprint,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EmbedResponse) Reset() {
	*x = EmbedResponse{}
	mi := &file_xai_api_v1_embed_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedResponse) ProtoMessage() {}

func (x *EmbedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xai_api_v1_embed_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedResponse.ProtoReflect.Descriptor instead.
func (*EmbedResponse) Descriptor() ([]byte, []int) {
	return file_xai_api_v1_embed_proto_rawDescGZIP(), []int{2}
}

func (x *EmbedResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EmbedResponse) GetEmbeddings() []*Embedding {
	if x != nil {
		return x.Embeddings
	}
	return nil
}

func (x *EmbedResponse) GetUsage() *EmbeddingUsage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *EmbedResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *EmbedResponse) GetSystemFingerprint() string {
	if x != nil {
		return x.SystemFingerprint
	}
	return ""
}

// Holds the embedding vector for a single embedding input.
type Embedding struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The index of the input this embedding was produced from.
	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	// The feature vectors derived from the inputs. Note that some inputs such as
	// images may produce multiple feature vectors.
	Embeddings    []*FeatureVector `protobuf:"bytes,2,rep,name=embeddings,proto3" json:"embeddings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Embedding) Reset() {
	*x = Embedding{}
	mi := &file_xai_api_v1_embed_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Embedding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Embedding) ProtoMessage() {}

func (x *Embedding) ProtoReflect() protoreflect.Message {
	mi := &file_xai_api_v1_embed_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Embedding.ProtoReflect.Descriptor instead.
func (*Embedding) Descriptor() ([]byte, []int) {
	return file_xai_api_v1_embed_proto_rawDescGZIP(), []int{3}
}

func (x *Embedding) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Embedding) GetEmbeddings() []*FeatureVector {
	if x != nil {
		return x.Embeddings
	}
	return nil
}

// A single feature vector.
type FeatureVector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The feature vector encoded as an array of floats. Only populated if
	// the encoding format is FORMAT_FLOAT.
	FloatArray []float32 `protobuf:"fixed32,1,rep,packed,name=float_array,json=floatArray,proto3" json:"float_array,omitempty"`
	// The feature vector encoded as a base64 string. Only populated if
	// the encoding format is FORMAT_BASE64.
	Base64Array   string `protobuf:"bytes,2,opt,name=base64_array,json=base64Array,proto3" json:"base64_array,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeatureVector) Reset() {
	*x = FeatureVector{}
	mi := &file_xai_api_v1_embed_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureVector) ProtoMessage() {}

func (x *FeatureVector) ProtoReflect() protoreflect.Message {
	mi := &file_xai_api_v1_embed_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureVector.ProtoReflect.Descriptor instead.
func (*FeatureVector) Descriptor() ([]byte, []int) {
	return file_xai_api_v1_embed_proto_rawDescGZIP(), []int{4}
}

func (x *FeatureVector) GetFloatArray() []float32 {
	if x != nil {
		return x.FloatArray
	}
	return nil
}

func (x *FeatureVector) GetBase64Array() string {
	if x != nil {
		return x.Base64Array
	}
	return ""
}

var File_xai_api_v1_embed_proto protoreflect.FileDescriptor

const file_xai_api_v1_embed_proto_rawDesc = "" +
	"\n" +
	"\x16xai/api/v1/embed.proto\x12\axai_api\x1a\x16xai/api/v1/image.proto\x1a\x16xai/api/v1/usage.proto\"\xaa\x01\n" +
	"\fEmbedRequest\x12)\n" +
	"\x05input\x18\x01 \x03(\v2\x13.xai_api.EmbedInputR\x05input\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12E\n" +
	"\x0fencoding_format\x18\x03 \x01(\x0e2\x1c.xai_api.EmbedEncodingFormatR\x0eencodingFormat\x12\x12\n" +
	"\x04user\x18\x04 \x01(\tR\x04user\"h\n" +
	"\n" +
	"EmbedInput\x12\x18\n" +
	"\x06string\x18\x01 \x01(\tH\x00R\x06string\x127\n" +
	"\timage_url\x18\x02 \x01(\v2\x18.xai_api.ImageUrlContentH\x00R\bimageUrlB\a\n" +
	"\x05input\"\xc7\x01\n" +
	"\rEmbedResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\n" +
	"embeddings\x18\x02 \x03(\v2\x12.xai_api.EmbeddingR\n" +
	"embeddings\x12-\n" +
	"\x05usage\x18\x03 \x01(\v2\x17.xai_api.EmbeddingUsageR\x05usage\x12\x14\n" +
	"\x05model\x18\x04 \x01(\tR\x05model\x12-\n" +
	"\x12system_fingerprint\x18\x05 \x01(\tR\x11systemFingerprint\"Y\n" +
	"\tEmbedding\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x126\n" +
	"\n" +
	"embeddings\x18\x02 \x03(\v2\x16.xai_api.FeatureVectorR\n" +
	"embeddings\"W\n" +
	"\rFeatureVector\x12#\n" +
	"\vfloat_array\x18\x01 \x03(\x02B\x02\x10\x01R\n" +
	"floatArray\x12!\n" +
	"\fbase64_array\x18\x02 \x01(\tR\vbase64Array*N\n" +
	"\x13EmbedEncodingFormat\x12\x12\n" +
	"\x0eFORMAT_INVALID\x10\x00\x12\x10\n" +
	"\fFORMAT_FLOAT\x10\x01\x12\x11\n" +
	"\rFORMAT_BASE64\x10\x022D\n" +
	"\bEmbedder\x128\n" +
	"\x05Embed\x12\x15.xai_api.EmbedRequest\x1a\x16.xai_api.EmbedResponse\"\x00B1Z/github.com/Maniacal/go-xai-sdk/proto/xai/api/v1b\x06proto3"

var (
	file_xai_api_v1_embed_proto_rawDescOnce sync.Once
	file_xai_api_v1_embed_proto_rawDescData []byte
)

func file_xai_api_v1_embed_proto_rawDescGZIP() []byte {
	file_xai_api_v1_embed_proto_rawDescOnce.Do(func() {
		file_xai_api_v1_embed_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_xai_api_v1_embed_proto_rawDesc), len(file_xai_api_v1_embed_proto_rawDesc)))
	})
	return file_xai_api_v1_embed_proto_rawDescData
}

var file_xai_api_v1_embed_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_xai_api_v1_embed_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_xai_api_v1_embed_proto_goTypes = []any{
	(EmbedEncodingFormat)(0), // 0: xai_api.EmbedEncodingFormat
	(*EmbedRequest)(nil),     // 1: xai_api.EmbedRequest
	(*EmbedInput)(nil),       // 2: xai_api.EmbedInput
	(*EmbedResponse)(nil),    // 3: xai_api.EmbedResponse
	(*Embedding)(nil),        // 4: xai_api.Embedding
	(*FeatureVector)(nil),    // 5: xai_api.FeatureVector
	(*ImageUrlContent)(nil),  // 6: xai_api.ImageUrlContent
	(*EmbeddingUsage)(nil),   // 7: xai_api.EmbeddingUsage
}
var file_xai_api_v1_embed_proto_depIdxs = []int32{
	2, // 0: xai_api.EmbedRequest.input:type_name -> xai_api.EmbedInput
	0, // 1: xai_api.EmbedRequest.encoding_format:type_name -> xai_api.EmbedEncodingFormat
	6, // 2: xai_api.EmbedInput.image_url:type_name -> xai_api.ImageUrlContent
	4, // 3: xai_api.EmbedResponse.embeddings:type_name -> xai_api.Embedding
	7, // 4: xai_api.EmbedResponse.usage:type_name -> xai_api.EmbeddingUsage
	5, // 5: xai_api.Embedding.embeddings:type_name -> xai_api.FeatureVector
	1, // 6: xai_api.Embedder.Embed:input_type -> xai_api.EmbedRequest
	3, // 7: xai_api.Embedder.Embed:output_type -> xai_api.EmbedResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_xai_api_v1_embed_proto_init() }
func file_xai_api_v1_embed_proto_init() {
	if File_xai_api_v1_embed_proto != nil {
		return
	}
	file_xai_api_v1_image_proto_init()
	file_xai_api_v1_usage_proto_init()
	file_xai_api_v1_embed_proto_msgTypes[1].OneofWrappers = []any{
		(*EmbedInput_String_)(nil),
		(*EmbedInput_ImageUrl)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_xai_api_v1_embed_proto_rawDesc), len(file_xai_api_v1_embed_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xai_api_v1_embed_proto_goTypes,
		DependencyIndexes: file_xai_api_v1_embed_proto_depIdxs,
		EnumInfos:         file_xai_api_v1_embed_proto_enumTypes,
		MessageInfos:      file_xai_api_v1_embed_proto_msgTypes,
	}.Build()
	File_xai_api_v1_embed_proto = out.File
	file_xai_api_v1_embed_proto_goTypes = nil
	file_xai_api_v1_embed_proto_depIdxs = nil
}
